<?php

/**
 * Implements hook_module_implements_alter().
 *
 * Place all our hook implementations at the beginning.
 */
function sb_stagemarker_before_module_implements_alter(&$implementations, $hook) {
  $self = 'sb_stagemarker_before';
  if (isset($implementations[$self])) {
    $group = $implementations[$self];
    unset($implementations[$self]);
    $implementations = array($self => $group) + $implementations;
  }
}

/**
 * Writes a mark before invoking an observed hook.
 *
 * @see sb_stagemarker_observe()
 */
function sb_stagemarker_before_invoke($hook, $module) {
  // May be too early. Modules hasn't been included yet.
  require_once dirname(__FILE__) . '/sb_stagemarker.module';
  if (sb_stagemarker_observe($hook)) {
    $function = $module .'_'. $hook;
    $time = timer_read("stagemarker_$function");
    sb_stagemarker_message("BEFORE INVOKE $hook $module [${time}ms]");
  }
}

/**
 * Implements hook_boot().
 */
function sb_stagemarker_before_boot() {
  // It's too early. Modules hasn't been included yet.
  require_once dirname(__FILE__) . '/sb_stagemarker.module';

  #TODO# Check module is not being enabled? See https://www.drupal.org/node/2324587

  sb_stagemarker_message("BEFORE HOOK BOOT");
}

/**
 * Implements hook_init().
 */
function sb_stagemarker_before_init() {
  sb_stagemarker_message("BEFORE HOOK INIT");
}

/**
 * Implements hook_page_build().
 *
 * @see drupal_render_page().
 */
function sb_stagemarker_before_page_build() {
  sb_stagemarker_message("BEFORE HOOK PAGE BUILD");
}

/**
 * Implements hook_exit().
 */
function sb_stagemarker_before_exit() {
  sb_stagemarker_message("BEFORE HOOK EXIT");
}

